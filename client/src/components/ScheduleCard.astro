---
// import '../styles/global.css';
const { speaker } = Astro.props;
import { formatTag, formatTime } from "../scripts/formatters.js";
const baseUrl = `${import.meta.env.BASE_URL}`;
// const baseUrl = ``;
---

<style>
  .speaker__schedule {
    display: grid;
    grid-template-columns: 15vw 20vw 1fr;
    background: rgba(239, 140, 64, 0.307);
    background: radial-gradient(
      circle,
      rgba(239, 140, 64, 0.763) 3%,
      rgba(234, 105, 103, 0.743) 48%,
      rgba(246, 175, 151, 0.702) 87%
    );
    border-radius: var(--space-xl);
  }

  .speaker__data-info {
    grid-column: 1;
    grid-row: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .schedule__speaker-time {
    font-size: var(--step-2);
    font-weight: 500;
    color: var(--text-color);
  }

  .speaker__data-img {
    grid-column: 2;
    grid-row: 1;
    display: grid;
    place-self: center;
    padding: var(--space-s);
  }
  .schedule__speaker-img {
    border-radius: var(--space-m);
  }

  .speaker__data-personal {
    grid-column: 3;
    grid-row: 1;
    display: grid;
    align-content: center;
    padding-left: var(--space-s);
    width: 90%;
  }
  .speaker__data-personal {
    grid-column: 3;
    grid-row: 1;
  }
  .schedule__speaker-name {
    font-size: var(--step-2);
    color: #ffeee8;
    border-bottom: #ffeee8 solid 0.5px;
    margin-bottom: var(--space-xs);
  }
  .schedule__speaker-title {
    font-size: var(--step-0);
    color: rgba(57, 57, 57, 0.772);
  }
  .speakers-schedule__tags {
    display: flex;
    gap: var(--space-2xs);
    flex-wrap: wrap;
    list-style: none;
    padding-top: var(--space-2xs);
    margin-top: var(--space-xs);
  }
  .speakers__tag a {
    text-decoration: none;
    font-size: var(--step--2);
    color: rgb(72, 72, 72);
    font-weight: 500;
  }
  .speakers__tag {
    padding: var(--space-2xs);
    background-color: #ffeee84a;
    color: var(--text-color);
    border-radius: var(--space-xs);
  }

  @media (max-width: 1024px) {
    .speaker__schedule {
      display: grid;
      grid-template-columns: 30vw auto;
      grid-template-rows: 1fr 2.5fr;
    }
    .speaker__data-img {
      grid-column: 1;
      grid-row: 2;
    }
    .speaker__data-info {
      grid-column: 1/3;
      grid-row: 1;
      padding-top: var(--space-s);
    }
    .speaker__data-personal {
      grid-column: 2;
      grid-row: 2;
      width: 90%;
      padding-bottom: var(--space-s);
    }

    .speakers__tag {
      padding: var(--space-3xs) var(--space-2xs);
    }
    .speakers-schedule__tags {
      display: flex;
      gap: var(--space-2xs);
      flex-wrap: wrap;
      list-style: none;
      margin-top: var(--space-xs);
    }
  }

  @media (max-width: 768px) {
    .speaker__schedule {
      display: grid;
      grid-template-rows: 10vh auto auto;
      grid-template-columns: 1fr;
    }
    .speaker__data-img {
      grid-row: 2;
      grid-column: 1;
      justify-content: center;
    }
    .speaker__data-info {
      grid-column: 1;
      grid-row: 1;
      padding-top: var(--space-s);
    }
    .speaker__data-personal {
      grid-column: 1;
      grid-row: 3;
      width: 90%;
    }
    .schedule__speaker-name {
      font-size: var(--step-4);
    }
    .schedule__speaker-title {
      font-size: var(--step-1);
    }
    .speakers__tag a {
      text-decoration: none;
      font-size: var(--step-0);
    }
    .speakers__tag {
      padding: var(--space-xs);
    }

    .speakers-schedule__tags {
      display: flex;
      justify-content: center;
      gap: var(--space-s);
    }
  }
</style>

<li class="speaker__schedule">
  <div class="speaker__data-info">
    <p class="schedule__speaker-time">{formatTime(speaker.attributes.time)}</p>
    <p class="schedule__speaker-duration">
      Duration: {speaker.attributes.duration}
    </p>
  </div>
  <div class="speaker__data-img">
    <a href={`/speakers/${speaker.id}`}>
      <img
        class="schedule__speaker-img"
        src={`${baseUrl}${import.meta.env.STRAPI_URL}${
          speaker.attributes.photo.data[0].attributes.url
        }`}
        alt={`Photo of ${speaker.attributes.name}`}
      />
    </a>
  </div>
  <div class="speaker__data-personal">
    <p class="schedule__speaker-name">
      {speaker.attributes.name}
      {speaker.attributes.surname}
    </p>

    <p class="schedule__speaker-title">{speaker.attributes.speech_tittle}</p>

    <ul class="speakers-schedule__tags">
      {
        speaker.attributes.tags.data.map((tag) => (
          <li class="speakers__tag">
            <a href={`${baseUrl}/tags/${tag.attributes.tag}`}>
              {formatTag(tag.attributes.tag)}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</li>
