---

const { tagSpeech } = Astro.props;
const speakersTag =tagSpeech.attributes.speakers.data
// const baseUrl = `${import.meta.env.BASE_URL}`
const baseUrl = ``
---  

<style>
.detail-tag__list{
  display:grid;
    grid-template-columns:  repeat(auto-fit, minmax(400px, 1fr));
    

      gap: var(--space-l);
      margin: var(--space-xl) var(--space-xl);
        color: rgb(64, 64, 64);
  }
  .detail-tag__item{
    display: grid;
  min-height: 25vh;
      background: rgba(239, 140, 64, 0.559);
background: radial-gradient(circle, rgba(239, 140, 64, 0.613) 3%, rgba(234, 105, 103, 0.546) 48%, rgba(246, 175, 151, 0.326) 87%);
border-radius: var(--space-xs);
padding: var(--space-xs);
  }
  .detail-tag__name{
    font-size: var(--step-2);
    font-weight: 500;
     color: #ea6967;
  
  }
  .detail-tag__title{
    font-size: var(--step-0);
    font-weight: 500;
    padding-bottom: var(--space-xs);
   
  
  }

  .detail-tag__location,   .detail-tag__date{
    font-size: var(--step--1);
    font-weight: 500;
    align-self: flex-end;
     color: #ea6967d4;
   

  }
  .link__detail-page{
    text-decoration: none;
      color: rgb(64, 64, 64);
  }
</style>


<ul class="detail-tag__list">
  {speakersTag.map(speaker => (
    <a  class="link__detail-page" href={`${baseUrl}/speakers/${speaker.id}`}>
    <li class="detail-tag__item">
        <p class="detail-tag__name">{speaker.attributes.name} {speaker.attributes.surname}</p>
        <p class="detail-tag__title">{speaker.attributes.speech_tittle} </p>
         <p class="detail-tag__date">{speaker.attributes.date} </p>

        <p class="detail-tag__location">{speaker.attributes.location.data.attributes.name} </p>

    </li>
    </a>
  ))}
</ul>



    <!-- tags[2].attributes.speakers.data[0].attributes.name -->