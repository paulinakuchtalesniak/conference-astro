---
import '../styles/global.css';
const { speaker,lineUp } = Astro.props;
// const date = speaker.attributes.day.data.attributes.date
console.log( speaker)


function formatTag(tag) {
  return tag
    .replace(/_/g, ' ')
    .split(' ')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
    .join(' ');
}
---  
     <style>
    .speakers__cards-list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap:2rem;
      margin: var(--space-l);
    }
  .speakers__card{
  background: rgb(239,140,64);
background: radial-gradient(circle, rgba(239,140,64,1) 3%, rgba(234,105,103,1) 48%, rgba(246,174,151,1) 87%);
display: grid;
  }
  .speakers__card-data{
      color: #fff6ee;
      font-size: var( --step-3);
      padding: var(--space-xs) var(--space-xs) 0 var(--space-xs);
      text-align:center;
  }
  .speakers__card-title{
        color: #fff6ee;
      font-size: var( --step-0);
      padding: var(--space-2xs)  var(--space-s);
         text-align:center;
      
      
  }
  .speakers__list-tags{
    display: flex;
   row-gap: var(--space-xs);
    column-gap: var(--space-2xs);
    flex-wrap: wrap;
    align-items: start;
    justify-content:center;
        padding: var(--space-xs) var(--space-xs);
        align-self:end
  }
  .speakers__tag{

    font-size: var( --step--2);
     background-color:#fff6ee50;
     padding: var(--space-2xs) var(--space-xs);
     border-radius:1rem;


  }
  .speakers__tag a{

   text-decoration:none;
    color: #9e3617;
  }
.hidden{
  display: none;
}
 
    </style>

{
  lineUp
  ? (

   <li class="speakers__card speakers__card-lineup" data-date-speaker={speaker.attributes.day?.data.attributes.date} data-location={speaker.attributes.location?.data.attributes.name}>
        <a href={`/speakers/${speaker.id}`}>
  <img class="speakers__card-img" src={`${import.meta.env.STRAPI_URL}${speaker.attributes.photo.data[0].attributes.url}`} alt={`Photo of ${speaker.attributes.name}`} />
    </a>
    <p>{speaker.attributes.day?.data.attributes.date}</p>
      <h3 class="speakers__card-data">{speaker.attributes.name} {speaker.attributes.surname}</h3>
      <p class="speakers__card-title">{speaker.attributes.speech_tittle}</p>
       <p class="speakers__card-type"> {speaker.attributes.speech_type.data.attributes.speech_type}</p>
              <p class="speakers__card-type">Duration{speaker.attributes.duration}</p>
               <p class="speakers__card-type">Start {speaker.attributes.time}</p>
      <ul class="speakers__list-tags">
        {speaker.attributes.tags.data.map(tag => (
          <li class="speakers__tag">
            <a href={`/tags/${tag.attributes.tag}`}>{formatTag(tag.attributes.tag)}</a>
          </li>
        ))}
      </ul>
    </li>
  )
  : (

    <li class="speakers__card" data-speaker={speaker.attributes.name}>
        <a href={`/speakers/${speaker.id}`}>
      <img class="speakers__card-img" src={`${import.meta.env.STRAPI_URL}${speaker.attributes.photo.data[0].attributes.url}`} alt={`Photo of ${speaker.attributes.name}`} />
        </a>
      <h3 class="speakers__card-data">{speaker.attributes.name} {speaker.attributes.surname}</h3>
      <p class="speakers__card-title">{speaker.attributes.speech_tittle}</p>
      <ul class="speakers__list-tags">
        {speaker.attributes.tags.data.map(tag => (
          <li class="speakers__tag">
            <a href={`/tags/${tag.attributes.tag}`}>{formatTag(tag.attributes.tag)}</a>
          </li>
        ))}
      </ul>
    </li>
  )
}


   
    